name: Build and Deploy

jobs:
    test:
        runs-on: ubuntu-latest
        env:
            backend-directory: ./backend
            frontend-directory: ./frontend

        # Configure AWS credentials and login to the ECR
        - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

        - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

        # Build and deploy the frontend docker images
        - name: Frontend build and deploy to ECR
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: chalkful_frontend
            IMAGE_TAG: ${{ github.sha }}
        run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        working-directory: ${{env.frontend-directory}}

        - name: Frontend build and deploy to ECR
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: chalkful_backend
            IMAGE_TAG: ${{ github.sha }}
        run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        working-directory: ${{env.frontend-directory}}

        # Generate deployment package for Elastic beanstalk and deploy
        - name: Generate deployment package
        run: zip -r deploy.zip Dockerrun.aws.json

        - name: Beanstalk Deploy my app
        uses: einaregilsson/beanstalk-deploy@v4
        with:
            aws_access_key: ${{secrets.AWS_ACCESS_KEY}}
            aws_secret_key: ${{secrets.AWS_SECRET_KEY}}
            application_name: chalkful
            environment_name: chalkful-env
            region: us-east-1
            version_label: "chalkful-${{ github.sha }}" // Using timestamp create on step #
            deployment_package: deploy.zip

        # Log out of ECR
        - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}