!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(window,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=2)}([function(e,t,n){"use strict";n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return c})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return d})),n.d(t,"e",(function(){return s})),n.d(t,"h",(function(){return u})),n.d(t,"f",(function(){return f})),n.d(t,"g",(function(){return m})),n.d(t,"j",(function(){return p})),n.d(t,"i",(function(){return y})),n.d(t,"m",(function(){return g})),n.d(t,"n",(function(){return b})),n.d(t,"k",(function(){return o})),n.d(t,"l",(function(){return a}));let r=[],o=!1;const l=document.querySelector(".menu"),a=!1;var c=function(e){e.preventDefault();var t=e.target.classList;t.contains("selected")?t.remove("selected"):t.add("selected")},u=function(e){e.target.style.opacity=.4,e.target.classList.contains("selected")||e.target.classList.add("selected"),e.target.style.cursor="grabbing",e.dataTransfer.dropEffect="copy",e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("text",e.target.dataset.tileId)},d=function(e){e.target.style.opacity=""},i=function(e){e.preventDefault(),e.target.classList.contains("selected")&&e.target.classList.remove("selected"),e.target.classList.contains("swap")?(l.setAttribute("active-tile-id",null),e.target.classList.remove("swap")):(l.setAttribute("active-tile-id",e.target.getAttribute("data-tile-id")),e.target.classList.add("swap"))},s=function(e){e.preventDefault(),0===e.target.children.length&&e.target.classList.add("over")},f=function(e){e.preventDefault(),e.target.classList.contains("over")&&e.target.classList.remove("over")},m=function(e){return e.preventDefault&&e.preventDefault(),e.dataTransfer.dropEffect="move",!1},p=function(e){return e.preventDefault&&e.preventDefault(),!1},v=null,y=function(e){e.preventDefault();var t=e.target;if(null!==(v=e.dataTransfer.getData("text"))&&""!==v.trim()){var n=document.querySelector('.tile[data-tile-id="'+v+'"]'),o=n.parentElement.dataset.row,l=n.parentElement.dataset.column,a=t.dataset.row,c=t.dataset.column,u=Number(a)-Number(o),d=Number(c)-Number(l),i=null,s=Array.from(document.querySelectorAll(".selected"));for(r=s.map((function(e){return{id:e.dataset.tileId,row:e.parentElement.dataset.row,column:e.parentElement.dataset.column}}));i!=r.length;){i=r.length;for(var f=0;f<i;f+=1){var m=r.shift(),p=document.querySelector('.tile[data-tile-id="'+m.id+'"]');o=p.parentElement.dataset.row,l=p.parentElement.dataset.column,a=u+Number(o),c=d+Number(l);var y=document.querySelector('#board .cell[data-row="'+a+'"][data-column="'+c+'"]');y.children.length>0?r.push(m):(y.appendChild(p),t.classList.remove("over"),t.classList.add("filled"),p.dataset.row=a,p.dataset.column=c)}}r=[],h(),g("tile")}else t.classList.contains("over")&&t.classList.remove("over")},g=function(e){Array.from(document.querySelectorAll("."+e)).forEach((function(e){e.classList.remove("selected"),e.style.opacity=""}))},h=function(){var e=document.querySelector("#bench"),t=[];Array.prototype.forEach.call(e.children,(function(e,n){0==e.children.length&&t.push(e)})),Array.prototype.forEach.call(t,(function(t,n){e.removeChild(t)})),Array.from(e.children).forEach((function(e,t){e.dataset.column=t.toString()}))},b=function(e){l.style.display="show"===e?"block":"none",o=!o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return u})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return a})),n.d(t,"a",(function(){return o})),n.d(t,"e",(function(){return r}));const r=35,o=35;var l=function(e){var t=[],n=parseInt(e.getAttribute("data-row")),l=parseInt(e.getAttribute("data-column")),a=document.querySelector("#board");return n>0&&t.push(a.querySelectorAll('.cell[data-row="'+(n-1)+'"][data-column="'+l+'"]')[0]),n<r-1&&t.push(a.querySelectorAll('.cell[data-row="'+(n+1)+'"][data-column="'+l+'"]')[0]),l>0&&t.push(a.querySelectorAll('.cell[data-row="'+n+'"][data-column="'+(l-1)+'"]')[0]),l<o-1&&t.push(a.querySelectorAll('.cell[data-row="'+n+'"][data-column="'+(l+1)+'"]')[0]),t},a=function(){var e=document.querySelector("#board");if(document.getElementById("bench").children.length>0)return!1;var t=[],n=[];for(t.push(e.querySelectorAll(".tile")[0]);t.length>0;){var r=t.pop();n.includes(r)||n.push(r),Array.from(l(r)).forEach((function(e){if(e.children.length>0){var r=e.children[0];n.includes(r)||t.push(r)}}))}return console.log("Seen tiles "+n.length),console.log("All tiles "+e.querySelectorAll(".tile").length),n.length===e.querySelectorAll(".tile").length},c=function(){for(var e=[],t=document.querySelector("#board"),n=0;n<r;n++)for(var l="",a=0;a<o;a++){(c=t.querySelectorAll('.cell[data-row="'+n+'"][data-column="'+a+'"]')[0]).children.length>0?l+=c.children[0].textContent:(l.length>1&&e.push(l),l="")}for(a=0;a<o;a++)for(l="",n=0;n<r;n++){var c;(c=t.querySelectorAll('.cell[data-row="'+n+'"][data-column="'+a+'"]')[0]).children.length>0?l+=c.children[0].textContent:(l.length>1&&e.push(l),l="")}return e},u=function(e,t){for(var n=e.slice(),r=0,o=t;r<o.length;r++){var l=o[r],a=n.indexOf(l);a>-1&&n.splice(a,1)}return n}},function(e,t,n){"use strict";n.r(t),n.d(t,"selectAllTiles",(function(){return l}));var r=n(0),o=n(1);n.d(t,"rows",(function(){return o.e})),n.d(t,"columns",(function(){return o.a}));document.querySelector(".menu");document.addEventListener("drop",(function(){Object(r.m)("tile")}),r.l);var l=function(){var e=document.querySelector("#board");Array.from(document.querySelectorAll(".tile")).forEach((function(t){e.contains(t)&&t.classList.add("selected")}))},a=function(){console.log("Centering");var e=document.getElementById("board-viewport"),t=document.getElementById("board"),n=t.offsetLeft+t.offsetWidth/2,r=t.offsetTop+t.offsetHeight/3;e.scrollLeft=n,e.scrollTop=r};document.getElementById("gameplay").style.display="none",document.getElementById("game-over").style.display="none",window.onbeforeunload=function(){return"Are you sure you want to leave, this will clear your board?"},document.getElementById("player_id").addEventListener("keyup",(function(e){13===e.keyCode&&(e.preventDefault(),$("#player_id_submit").click())})),window.addEventListener("click",(function(e){r.k&&Object(r.n)("hide")})),function(){for(var e=document.getElementById("board"),t=0;t<o.e;t++)for(var n=0;n<o.a;n++)e.innerHTML+='<div class="cell" data-row='+t+" data-column="+n+"></div>";Array.from(document.querySelectorAll(".cell")).forEach((function(e){e.addEventListener("onmousedown",r.j,r.l),e.addEventListener("dragenter",r.e,r.l),e.addEventListener("dragleave",r.f,r.l),e.addEventListener("dragover",r.g,r.l),e.addEventListener("dragend",r.d,r.l),e.addEventListener("drop",r.i,r.l)})),a()}()}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,