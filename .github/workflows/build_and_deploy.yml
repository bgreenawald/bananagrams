name: Build and Deploy

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      backend-directory: ./backend
      frontend-directory: ./frontend
      python_version: 3.7.0
      poetry_version: 1.0

    steps:
    - uses: actions/checkout@v2
    # Test the backend
    - name: Install
      uses: abatilo/actions-poetry@v1.5.0
      with:
        python_version: ${{ env.python_version }}
        poetry_version: ${{ env.poetry_version }}
        working-directory: ${{ env.backend-directory }}
        args: install
    - name: Lint with flake8
      uses: abatilo/actions-poetry@v1.5.0
      with:
        python_version: ${{ env.python_version }}
        poetry_version: ${{ env.poetry_version }}
        working-directory: ${{ env.backend-directory }}
        # stop the build if there are Python syntax errors or undefined names
        args: run flake8 .
    - name: Test with pytest
      uses: abatilo/actions-poetry@v1.5.0
      with:
        python_version: ${{ env.python_version }}
        poetry_version: ${{ env.poetry_version }}
        working-directory: ${{ env.backend-directory }}
        # stop the build if there are Python syntax errors or undefined names
        args: run pytest

    # Configure AWS credentials and login to the ECR
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Build and deploy the frontend docker images
    - name: Frontend build and deploy to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: chalkful_frontend
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY
      working-directory: ${{ env.frontend-directory }}

    # Build and deploy the backend docker image
    - name: Backend build and deploy to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: chalkful_backend
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY
      working-directory: ${{ env.backend-directory }}

    # Generate deployment package for Elastic beanstalk and deploy
    - name: Generate deployment package
      run: zip -g deploy.zip Dockerrun.aws.json

    - name: Beanstalk Deploy my app
      uses: einaregilsson/beanstalk-deploy@v4
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        application_name: chalkful
        environment_name: chalkful-env
        region: us-east-1
        version_label: chalkful-${{ github.sha }}
        deployment_package: deploy.zip

    # Log out of ECR
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
